[{"/Users/melissagenger/web/projects/quote-generator/src/App.js":"1","/Users/melissagenger/web/projects/quote-generator/src/index.js":"2","/Users/melissagenger/web/projects/quote-generator/src/reportWebVitals.js":"3","/Users/melissagenger/web/projects/quote-generator/src/components/RandomQuotes/QuoteGenerator.jsx":"4","/Users/melissagenger/web/projects/quote-generator/src/components/RandomQuotes/QuoteCard.jsx":"5","/Users/melissagenger/web/projects/quote-generator/src/components/Login/Login.jsx":"6","/Users/melissagenger/web/projects/quote-generator/src/components/HomePage/HomePage.jsx":"7","/Users/melissagenger/web/projects/quote-generator/src/components/NavBar/NavBar.js":"8","/Users/melissagenger/web/projects/quote-generator/src/components/Counter/Counter.jsx":"9","/Users/melissagenger/web/projects/quote-generator/src/articles.js":"10","/Users/melissagenger/web/projects/quote-generator/src/components/ImageSlider/ImageSlider.jsx":"11","/Users/melissagenger/web/projects/quote-generator/src/components/ImageSlider/ImageData.js":"12","/Users/melissagenger/web/projects/quote-generator/src/components/FizzBuzz/FizzBuzz.jsx":"13"},{"size":567,"mtime":1610745820645,"results":"14","hashOfConfig":"15"},{"size":591,"mtime":1610695767038,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1609388465425,"results":"17","hashOfConfig":"15"},{"size":1644,"mtime":1610700158570,"results":"18","hashOfConfig":"15"},{"size":249,"mtime":1610698641510,"results":"19","hashOfConfig":"15"},{"size":1490,"mtime":1610693595922,"results":"20","hashOfConfig":"15"},{"size":157,"mtime":1610745876049,"results":"21","hashOfConfig":"15"},{"size":355,"mtime":1610726036756,"results":"22","hashOfConfig":"15"},{"size":846,"mtime":1610693638735,"results":"23","hashOfConfig":"15"},{"size":551,"mtime":1611368734074,"results":"24","hashOfConfig":"15"},{"size":1323,"mtime":1610736909486,"results":"25","hashOfConfig":"15"},{"size":631,"mtime":1610725717230,"results":"26","hashOfConfig":"15"},{"size":506,"mtime":1611369231478,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yq6xzx",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/melissagenger/web/projects/quote-generator/src/App.js",[],"/Users/melissagenger/web/projects/quote-generator/src/index.js",[],["58","59"],"/Users/melissagenger/web/projects/quote-generator/src/reportWebVitals.js",[],["60","61"],"/Users/melissagenger/web/projects/quote-generator/src/components/RandomQuotes/QuoteGenerator.jsx",["62","63","64"],"import React, {useState, useEffect} from 'react';\nimport {QuoteCard} from './QuoteCard.jsx';\nimport './quotes.scss';\n\nconst QuoteGenerator = () => {\n    const [quote, setQuote] = useState('');\n    const [bgColor, setBgColor] = useState('');\n    const [tweet, setTweet] = useState('');\n\n    const colors = ['red', 'blue', 'yellow', 'purple'];\n\n    const getQuote = () => {\n        fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json')\n            .then(response => response.json())\n            .then(data => {\n                let quotes = data.quotes\n                let num = Math.floor(Math.random() * quotes.length);\n                let newQuote = quotes[num];\n                setQuote(newQuote);\n                console.log(getQuote)\n            })\n    }\n\n    const getColor = () => {\n        let colorNum = Math.floor(Math.random() * colors.length);\n        let newBgColor = colors[colorNum]\n        setBgColor(newBgColor);\n            console.log(newBgColor)\n    }\n\n    const getTweet = () => {\n        window.open(\"https://twitter.com/intent/tweet?text=\" + getQuote());\n    }\n\n    \n    useEffect(() => {\n        getQuote();\n        getColor();\n        // getTweet();\n    }, [])\n\n    return (\n        <div className='quote-container'>\n            <div >\n                <QuoteCard quote={quote} />\n                <button style={{backgroundColor: bgColor}} onClick={getQuote}>New Quote</button>\n                <span onClick={getTweet}><i className=\"fa fa-twitter\"></i></span>\n            </div>\n        </div>\n    )\n}\nexport default QuoteGenerator;","/Users/melissagenger/web/projects/quote-generator/src/components/RandomQuotes/QuoteCard.jsx",[],"/Users/melissagenger/web/projects/quote-generator/src/components/Login/Login.jsx",["65"],"import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    const validateLogin = () => {\n        if (password.length >= 0 && email.length >= 0) {\n            setIsLoggedIn(true)\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n    }\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <Form onSubmit={handleSubmit}>\n                <Form.Group size='sm' controlId='email'>\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control \n                    autoFocus\n                    type='email'\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}/>\n                </Form.Group>\n                <Form.Group size='sm' controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control \n                    autoFocus\n                    type='password'\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}/>\n                </Form.Group>\n                <button onSubmit={validateLogin}>Submit</button>\n            </Form>\n            {/* {isLoggedIn ? <p>You are logged in!</p> : <p>Please enter the correct email and password.</p>} */}\n        </div>\n    )\n}\nexport default Login;","/Users/melissagenger/web/projects/quote-generator/src/components/HomePage/HomePage.jsx",[],"/Users/melissagenger/web/projects/quote-generator/src/components/NavBar/NavBar.js",[],"/Users/melissagenger/web/projects/quote-generator/src/components/Counter/Counter.jsx",[],"/Users/melissagenger/web/projects/quote-generator/src/articles.js",[],"/Users/melissagenger/web/projects/quote-generator/src/components/ImageSlider/ImageSlider.jsx",[],"/Users/melissagenger/web/projects/quote-generator/src/components/ImageSlider/ImageData.js",[],"/Users/melissagenger/web/projects/quote-generator/src/components/FizzBuzz/FizzBuzz.jsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"66","replacedBy":"70"},{"ruleId":"68","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":8,"column":12,"nodeType":"74","messageId":"75","endLine":8,"endColumn":17},{"ruleId":"72","severity":1,"message":"76","line":8,"column":19,"nodeType":"74","messageId":"75","endLine":8,"endColumn":27},{"ruleId":"77","severity":1,"message":"78","line":40,"column":8,"nodeType":"79","endLine":40,"endColumn":10,"suggestions":"80"},{"ruleId":"72","severity":1,"message":"81","line":7,"column":12,"nodeType":"74","messageId":"75","endLine":7,"endColumn":22},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],["82"],["83"],"no-unused-vars","'tweet' is assigned a value but never used.","Identifier","unusedVar","'setTweet' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getColor' and 'getQuote'. Either include them or remove the dependency array.","ArrayExpression",["84"],"'isLoggedIn' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [getColor, getQuote]",{"range":"87","text":"88"},[1270,1272],"[getColor, getQuote]"]